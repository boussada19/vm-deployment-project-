{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashre\\\\OneDrive\\\\Desktop\\\\final-project\\\\frontend\\\\src\\\\components\\\\VMDeployForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VMDeployForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    template: 'Clonage-VM',\n    cpu: 2,\n    memory: 2048,\n    disk: 40,\n    ip: '10.0.1.85',\n    gateway: '10.0.1.1',\n    dns: '10.0.1.70',\n    name: 'win-cloned-custom'\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/deploy', formData);\n      alert('VM Deployment Triggered: ' + response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert('Error: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Unknown error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Deploy VM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"VM Name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Template\",\n        name: \"template\",\n        value: formData.template,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"CPUs\",\n        name: \"cpu\",\n        type: \"number\",\n        value: formData.cpu,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Memory (MB)\",\n        name: \"memory\",\n        type: \"number\",\n        value: formData.memory,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Disk Size (GB)\",\n        name: \"disk\",\n        type: \"number\",\n        value: formData.disk,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"IP Address\",\n        name: \"ip\",\n        value: formData.ip,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Gateway\",\n        name: \"gateway\",\n        value: formData.gateway,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"DNS Server\",\n        name: \"dns\",\n        value: formData.dns,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Deploy VM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(VMDeployForm, \"zhY2/oooeVs/aq7kv99xP5JTbqo=\");\n_c = VMDeployForm;\nexport default VMDeployForm;\nvar _c;\n$RefreshReg$(_c, \"VMDeployForm\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","jsxDEV","_jsxDEV","VMDeployForm","_s","formData","setFormData","template","cpu","memory","disk","ip","gateway","dns","name","handleChange","e","target","value","handleSubmit","preventDefault","response","post","alert","data","message","error","_error$response","_error$response$data","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","onChange","fullWidth","margin","type","color","_c","$RefreshReg$"],"sources":["C:/Users/ashre/OneDrive/Desktop/final-project/frontend/src/components/VMDeployForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Container, Typography } from '@mui/material';\r\n\r\nconst VMDeployForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    template: 'Clonage-VM',\r\n    cpu: 2,\r\n    memory: 2048,\r\n    disk: 40,\r\n    ip: '10.0.1.85',\r\n    gateway: '10.0.1.1',\r\n    dns: '10.0.1.70',\r\n    name: 'win-cloned-custom',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/deploy', formData);\r\n      alert('VM Deployment Triggered: ' + response.data.message);\r\n    } catch (error) {\r\n      alert('Error: ' + (error.response?.data?.error || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\">Deploy VM</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField label=\"VM Name\" name=\"name\" value={formData.name} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"Template\" name=\"template\" value={formData.template} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"CPUs\" name=\"cpu\" type=\"number\" value={formData.cpu} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"Memory (MB)\" name=\"memory\" type=\"number\" value={formData.memory} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"Disk Size (GB)\" name=\"disk\" type=\"number\" value={formData.disk} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"IP Address\" name=\"ip\" value={formData.ip} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"Gateway\" name=\"gateway\" value={formData.gateway} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <TextField label=\"DNS Server\" name=\"dns\" value={formData.dns} onChange={handleChange} fullWidth margin=\"normal\" />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Deploy VM</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VMDeployForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}